// Next.js file templates
const jsxPageTemplate = () => `
import React from 'react';

export default function Page() {
    return (
        <div>
            <h1>Page</h1>
            <p>This is a new page generated by your CLI.</p>
        </div>
    )    
}
`;

const tsxPageTemplate = () => `
import React from 'react';

export default function Page() {
  return (
    <div>
      <h1>Page</h1>
      <p>This is a new page generated by your CLI.</p>
    </div>
  );
};
`;

const routeJsTemplate = () => `import { NextResponse } from 'next/server';
export async function GET(request) {
    return NextResponse.json({ message: 'This is a route file generated by your CLI.' });
}
`;

const routeTsTemplate = () => `import { NextResponse } from 'next/server';
export async function GET(request: Request) {
    return NextResponse.json({ message: 'This is a route file generated by your CLI.' });
}
`;

const serverComponentsJsTemplate = (name) => `import React from 'react';
export default function ${name}() {
    return (
        <div>
            <h1>${name} Component</h1>
            <p>This is a new component generated by your CLI.</p>
        </div>
    );
}
`;

const serverComponentsTsTemplate = (name) => `import React from 'react';
export default function ${name}() {
    return (
        <div>
            <h1>${name} Component</h1>
            <p>This is a new component generated by your CLI.</p>
        </div>
    );
}
`;


const clientComponentsJsTemplate = (name) => `'use client';
import React from 'react';

export default function ${name}() {
    return (
        <div>
            <h1>${name} Component</h1>
            <p>This is a new component generated by your CLI.</p>
        </div>
    );
}
`;

const clientComponentsTsTemplate = (name) => `'use client';
import React from 'react';

export default function ${name}() {
    return (
        <div>
            <h1>${name} Component</h1>
            <p>This is a new component generated by your CLI.</p>
        </div>
    );
}
`;

module.exports = {
  jsxPageTemplate,
  tsxPageTemplate,
  routeJsTemplate,
  routeTsTemplate,
  serverComponentsJsTemplate,
  serverComponentsTsTemplate,
  clientComponentsJsTemplate,
  clientComponentsTsTemplate
};
